@model List<Aplicacao.ViewModels.ContatoViewModel>

<div style="margin-top:30px;" id="lista-contatos-grid">
    <div class="col-xs-12">
        <div class="jarviswidget jarviswidget-color-blueDark margin-bottom-0" id="wid-id-1" data-widget-editbutton="false" data-widget-colorbutton="false"
             data-widget-fullscreenbutton="false" data-widget-deletebutton="false" data-widget-togglebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Contatos</h2>
            </header>
            <table id="data_table_contacts" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th style="width: 70%;">Contato</th>
                        <th style="width: 30%;">Tipo de Contato</th>
                        <th class="hasinput" style="max-width: 120px; min-width: 120px; width: 1%;" rowspan="1" colspan="1">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td style="display:none;" id="id_contact">@item.Id</td>

                                <td class="col-xs-10">
                                    @switch (item.Tipo)
                                    {
                                        case Entidade.Uteis.TipoContato.Email:
                                        case Entidade.Uteis.TipoContato.OutroEmail:
                                            @item.Email
                                            break;
                                        case Entidade.Uteis.TipoContato.Residencial:
                                        case Entidade.Uteis.TipoContato.Fax:
                                            @item.Telefone
                                            break;
                                        case Entidade.Uteis.TipoContato.Celular:
                                            @item.Celular
                                            break;
                                        case Entidade.Uteis.TipoContato.Recado:
                                        case Entidade.Uteis.TipoContato.Comercial:
                                            @(item.Telefone + (!string.IsNullOrEmpty(item.Telefone) && !string.IsNullOrEmpty(item.Celular) ? " / " + item.Celular : item.Celular))
                                            break;
                                        @*case Entidade.Uteis.TipoContato.Padrao:
                                            @(string.Format("{0}{1}{2}", !string.IsNullOrEmpty(item.Telefone) ? item.Telefone : "", (!string.IsNullOrEmpty(item.Telefone) && !string.IsNullOrEmpty(item.Celular) ? " / " + item.Celular : item.Celular), (!string.IsNullOrEmpty(item.Telefone) || !string.IsNullOrEmpty(item.Celular) ? " / " + item.Email : item.Email)))
                                            break;*@
                                    }
                                </td>

                                <td>@item.Tipo.ToString()</td>
                                <td class="col-md-2">
                                    <span class="btn btn-primary" style="margin-right: 10px;" onclick="editarContato(@item.Id)"><i class="fa fa-edit"></i></span>
                                    <span class="btn btn-danger" onclick="removerContato(@item.Id)"><i class="fa fa-remove"></i></span>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>