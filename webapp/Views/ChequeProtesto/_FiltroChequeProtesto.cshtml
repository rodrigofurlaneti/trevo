@using Portal.Controllers
@model Aplicacao.ViewModels.ChequeViewModel
@{
    Layout = null;
}



<div class="widget-body">

    <div id="conteudo" class="row margin-bottom-5">
        <div class="col-xs-12 col-sm-4">
            <div class="col-xs-12 no-padding">
                <label>Conta Financeira: </label>
                <br />
                @*@Html.DropDownListFor(x => x.ContaFinanceira.Id, (SelectList)ViewBag.ListaContaFinanceiraSelectList, "Selecione uma Conta Financeira...", new { @id = "contaFinanceira", @class = "chosen-select", data_placeholder = "Selecione uma Conta Financeira..." })*@
            </div>
        </div>
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.Agencia, "Agencia: ")
            </div>
            <div class="col-xs-12 col-md-6 no-padding">
                @Html.TextBoxFor(x => x.Agencia, new { @id = "agencia", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Agencia, "Campo deve ser preenchido!", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.Conta, "Conta: ")
            </div>
            <div class="col-xs-12 col-md-6 no-padding">
                @Html.TextBoxFor(x => x.Conta, new { @id = "conta", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Conta, "Campo deve ser preenchido!", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div id="conteudo" class="row margin-bottom-5">
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.Numero, "Numero do Cheque: ")
            </div>
            <div class="col-xs-12 col-md-6 no-padding">
                @Html.EditorFor(x => x.Numero, new { @id = "numero", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Numero, "Campo deve ser preenchido!", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.Valor, "Valor: ")
            </div>
            @Html.TextBoxFor(x => x.Valor, new { @id = "valor", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Valor, "Campo deve ser preenchido!", new { @class = "text-danger" })
        </div>

        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.Emitente, "Emitente: ")
            </div>
            <div class="col-xs-12 col-md-6 no-padding">
                @Html.EditorFor(x => x.Emitente, new { @id = "emitente", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Emitente, "Campo deve ser preenchido!", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                <label>CPF:</label>
                <br />
                @Html.TextBoxFor(x => x.Cpf, new { @id = "cpf", @class = "form-control" }) @*, onchange = "validaCPF(this);" })*@
                @Html.ValidationMessageFor(x => x.Cpf, "Informe um CPF válido!", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div id="conteudo" class="row margin-bottom-5">
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                <label>Status:</label>
                <br />
                @Html.EnumDropDownListFor(x => x.StatusCheque, "Select um status", new { @id = "statuscheque", @class = "form-control" })
            </div>
        </div>
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                <label>Data Protesto:</label>
                <br />
                @Html.TextBoxFor(x => x.DataProtesto, new { @id = "data", Value = Model != null && Model.DataProtesto > System.Data.SqlTypes.SqlDateTime.MinValue.Value ? Model.DataProtesto.Value.ToString("dd/MM/yyyy") : string.Empty, @class = "form-control fieldDate" })
            </div>
        </div>
        <div class="col-xs-12 col-md-2">
            <div class="col-xs-12 no-padding">
                @Html.LabelFor(x => x.CartorioProtestado, "Cartorio Protesto: ")
            </div>
            <div class="col-xs-12 col-md-6 no-padding">
                @Html.TextBoxFor(x => x.CartorioProtestado, new { @id = "cartorioprotestadofiltro", @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="col-xs-12">
        <button type="submit" id="pesquisar" class="btn btn-lg btn-primary pull-right" onclick="BuscarChequeProtestos()">
            <i class="fa fa-search"></i> Buscar
        </button>
    </div>



</div>
