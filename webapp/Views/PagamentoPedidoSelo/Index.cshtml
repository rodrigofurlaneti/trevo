@using Portal.Controllers
@*@model Entidade.CheckListAtividade*@

@*@model Entidade.EquipamentoUnidade*@
@model Aplicacao.ViewModels.PedidoSeloViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var controller = ViewContext.Controller as PagamentoPedidoSeloController;
}

@section pagespecific{

    @Scripts.Render("~/Scripts/PagamentoPedidoSelo/pagamentopedidoselo.js")
    @Styles.Render("~/content/css/shared/menu-administrativo-config.css")

    @Styles.Render("~/Content/bootstrap/datepicker/bootstrap-datepicker.css")

    @Styles.Render("~/Scripts/plugin/chosen_v1.8.2/chosen.css")
    @Scripts.Render("~/Scripts/plugin/chosen_v1.8.2/chosen.jquery.js")

    @Scripts.Render("~/Scripts/jquery.moneymask.js")
    @Scripts.Render("~/Scripts/funcoes-uteis.js")
}


<div id="content">
    <div>
        <section id="widget-grid" class="">
            <div class="row">
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="jarviswidget" id="wid-id-2" data-widget-editbutton="false" data-widget-deletebutton="false">
                        <header>
                            <span class="widget-icon"> <i class="fa fa-list-alt"></i> </span>
                            <h2>
                                Consulta Pagamento Pedido de Selo
                            </h2>
                        </header>
                        <div>
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->
                            </div>
                            <div class="widget-body">

                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 margin-bottom-5">

                                    @Html.HiddenFor(x => x.Id, new { @id = "hdnPedidoSelo" })

                                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                        <label>Unidade: </label><br />
                                        @{
                                            if ((Model != null && Model.Id != 0))
                                            {
                                                @Html.HiddenFor(x => x.Unidade.Id)
                                                @Html.DropDownListFor(x => x.Unidade.Id, new SelectList(controller.ListaUnidade, "Id", "Nome"), "Selecione...", new { @id = "unidade", @class = "chosen-select form-control", @disabled = "true", data_placeholder = "Selecione..." })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(x => x.Unidade.Id, new SelectList(controller.ListaUnidade, "Id", "Nome"), "Selecione...", new { @id = "unidade", @class = "chosen-select form-control", data_placeholder = "Selecione..." })
                                            }
                                        }

                                        @Html.ValidationMessageFor(x => x.Unidade.Id, "Campo deve ser preenchido!", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                        <label>Cliente: </label><br />
                                        @{
                                            if ((Model != null && Model.Id != 0))
                                            {
                                                @Html.TextBoxFor(p => p.Cliente.Descricao, new { id = "clientes", @class = "form-control" })
                                                @Html.HiddenFor(x => x.Cliente.Id, new { id = "cliente" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(p => p.Cliente.Descricao, new { id = "clientes", @class = "form-control" })
                                                @Html.HiddenFor(x => x.Cliente.Id, new { id = "cliente" })
                                            }
                                        }

                                        @Html.ValidationMessageFor(x => x.Unidade.Id, "Campo deve ser preenchido!", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                        <label>Tipo de Selo: </label><br />
                                        @{
                                            if ((Model != null && Model.Id != 0))
                                            {
                                                @Html.HiddenFor(x => x.TipoSelo.Id)
                                                @Html.DropDownListFor(x => x.TipoSelo.Id, new SelectList(controller.ListaTipoSelo, "Id", "Nome"), "Selecione...", new { @id = "tiposelo", @class = "chosen-select form-control", @disabled = "true", data_placeholder = "Selecione..." })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(x => x.TipoSelo.Id, new SelectList(controller.ListaTipoSelo, "Id", "Nome"), "Selecione...", new { @id = "tiposelo", @class = "chosen-select form-control", data_placeholder = "Selecione..." })
                                            }
                                        }

                                        @Html.ValidationMessageFor(x => x.TipoSelo.Id, "Campo deve ser preenchido!", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                        <label>Convênio: </label><br />
                                        @{
                                            if ((Model != null && Model.Id != 0))
                                            {
                                                @Html.HiddenFor(x => x.Convenio.Id)
                                                @Html.DropDownListFor(x => x.Convenio.Id, new SelectList(controller.ListaConvenio, "Id", "Descricao"), "Selecione...", new { @id = "convenio", @class = "chosen-select form-control", @disabled = "true", data_placeholder = "Selecione..." })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(x => x.Convenio.Id, new SelectList(controller.ListaConvenio, "Id", "Descricao"), "Selecione...", new { @id = "convenio", @class = "chosen-select form-control", data_placeholder = "Selecione..." })
                                            }
                                        }

                                        @Html.ValidationMessageFor(x => x.Unidade.Id, "Campo deve ser preenchido!", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 margin-bottom-5">
                                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                                        <label>Tipo Pagamento:</label>
                                        <br />
                                        @Html.DropDownListFor(x => x.TiposPagamento, new SelectList(controller.ListaTipoPagamento, "Id", "Descricao"), "Selecione um tipo pagamento", new { @id = "tipopagamento", @class = "form-control" })
                                    </div>
                                </div>

                                @*Filtrar Pedidos*@
                                <br />


                                @if ((Model == null || Model.Id == 0))
                                {
                                    <div class="row margin-bottom-5">
                                        <div class="pull-right margin-right-10">
                                            <span id="filtrarpedidos" class="btn btn-lg btn-primary" onclick="FiltrarPedidos()"><i class="fa fa-save"></i> Filtrar</span>
                                        </div>
                                    </div>
                                }

                                <br />
                            </div>
                        </div>
                    </div>
                </article>
            </div>

            <!-- row -->
            <div class="row">
                <!-- NEW WIDGET START -->
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-1" data-widget-editbutton="false" data-widget-deletebutton="false">
                        <header>
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>Lista Pedido Selo</h2>
                        </header>
                        <!-- widget div-->
                        <div id="lista-pedido-result">
                            @Html.Partial("../PagamentoPedidoSelo/_GridPagamentoPedidoSelo", (controller != null && controller.ListaPedidoSelo != null && controller.ListaPedidoSelo.Count > 0) ? controller.ListaPedidoSelo : new List<PedidoSeloViewModel>())
                        </div>
                        <!-- end widget div -->
                    </div>
                    <!-- end widget -->
                </article>
                <!-- WIDGET END -->
            </div>
            <!-- end row -->
            <!-- end row -->
        </section>
    </div>
</div>